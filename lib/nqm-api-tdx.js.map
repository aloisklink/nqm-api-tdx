{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 751fa235339015fa7a29","webpack:///external \"bluebird\"","webpack:///external \"debug\"","webpack:///./src/helpers.js","webpack:///external \"base-64\"","webpack:///external \"isomorphic-fetch\"","webpack:///./src/api-tdx.js"],"names":["TDXApiError","message","stack","name","Error","prototype","Object","create","constructor","handleError","source","failure","code","internal","from","JSON","stringify","checkResponse","response","json","then","ok","resolve","error","error_description","reject","status","setDefaults","config","log","tdxHost","queryHost","commandHost","protocolComponents","split","length","protocol","hostComponents","hostname","slice","join","databotHost","errLog","pollingRetries","pollingInterval","waitInfinitely","TDXApi","accessToken","command","data","contentType","Request","method","mode","headers","Headers","body","prefix","filter","projection","options","query","indexOf","id","secret","credentials","undefined","encodeURIComponent","encode","uri","request","grant_type","ttl","accessTokenTTL","bind","result","access_token","catch","err","buildCommandRequest","username","approved","key","verified","wait","waitForIndex","resourceId","update","fromParentId","toParentId","res","accountId","sourceId","access","rid","aid","src","acc","addedBy","by","shareMode","allowPermissive","permissiveShare","datasetId","postData","payload","concat","upsert","__upsert","file","stream","size","text","spread","databotId","instanceData","zoneId","buildQueryRequest","noThrow","schemaId","getResources","tdx","check","retryCount","maxRetries","getResource","resource","checkResult","delay","waitForResource","parseError","parse","parseEx","initialStatus","builtIndexCheck","dataset","indexStatus","continueWaiting","Math","min"],"mappings":"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","file":"nqm-api-tdx.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"bluebird\"), require(\"debug\"), require(\"base-64\"), require(\"isomorphic-fetch\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"nqm-api-tdx\", [\"bluebird\", \"debug\", \"base-64\", \"isomorphic-fetch\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"nqm-api-tdx\"] = factory(require(\"bluebird\"), require(\"debug\"), require(\"base-64\"), require(\"isomorphic-fetch\"));\n\telse\n\t\troot[\"nqm-api-tdx\"] = factory(root[\"bluebird\"], root[\"debug\"], root[\"base-64\"], root[\"isomorphic-fetch\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_0__, __WEBPACK_EXTERNAL_MODULE_1__, __WEBPACK_EXTERNAL_MODULE_3__, __WEBPACK_EXTERNAL_MODULE_4__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 751fa235339015fa7a29","module.exports = __WEBPACK_EXTERNAL_MODULE_0__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"bluebird\"\n// module id = 0\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_1__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"debug\"\n// module id = 1\n// module chunks = 0","import Promise from \"bluebird\";\nimport debug from \"debug\";\n\nconst TDXApiError = function(message, stack) {\n  this.name = \"TDXApiError\";\n  this.message = message || \"no message given\";\n  this.stack = stack || (new Error()).stack;\n};\n\nTDXApiError.prototype = Object.create(Error.prototype);\nTDXApiError.prototype.constructor = TDXApiError;\n\nconst handleError = function(source, failure, code) {\n  const internal = {\n    from: source,\n    failure: JSON.stringify(failure),\n    code: typeof code === \"undefined\" ? \"n/a\" : code,\n  };\n  return new TDXApiError(JSON.stringify(internal), (new Error()).stack);\n};\n\nconst checkResponse = function(source, response) {\n  return response.json()\n    .then((json) => {\n      if (response.ok) {\n        return Promise.resolve(json);\n      } else {\n        if (json.error) {\n          // Build a failure object from the json response.\n          const failure = {code: json.error, message: json.error_description};\n          return Promise.reject(handleError(source, failure, response.status));\n        } else {\n          // The response body holds the error details.\n          return Promise.reject(handleError(source, json, response.status));\n        }\n      }\n    });\n};\n\nconst setDefaults = function(config) {\n  const log = debug(\"nqm-api-tdx:setDefaults\");\n  if (config.tdxHost && (!config.queryHost || !config.commandHost)) {\n    const protocolComponents = config.tdxHost.split(\"://\");\n    if (protocolComponents.length !== 2) {\n      throw new Error(`invalid tdxHost in config - no protocol: ${config.tdxHost}`);\n    }\n    const protocol = protocolComponents[0];\n    const hostComponents = protocolComponents[1].split(\".\");\n    if (hostComponents.length < 3) {\n      throw new Error(`invalid tdxHost in config - expected sub.domain.tld: ${config.tdxHost}`);\n    }\n    const hostname = hostComponents.slice(1).join(\".\");\n    config.commandHost = config.commandHost || `${protocol}://cmd.${hostname}`;\n    config.queryHost = config.queryHost || `${protocol}://q.${hostname}/v1/`;\n    config.databotHost = config.databotHost || `${protocol}://databot.${hostname}`;\n    log(\n      \"defaulted hosts to %s, %s, %s\",\n      config.commandHost,\n      config.queryHost,\n      config.databotHost\n    );\n  }\n};\n\nexport {\n  checkResponse,\n  handleError,\n  setDefaults,\n  TDXApiError,\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/helpers.js","module.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"base-64\"\n// module id = 3\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_4__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"isomorphic-fetch\"\n// module id = 4\n// module chunks = 0","import Promise from \"bluebird\";\nimport fetch from \"isomorphic-fetch\";\nimport base64 from \"base-64\";\nimport debug from \"debug\";\nimport {checkResponse, handleError, setDefaults} from \"./helpers\";\n\nconst log = debug(\"nqm-api-tdx\");\nconst errLog = debug(\"nqm-api-tdx:error\");\n\nconst pollingRetries = 15;\nconst pollingInterval = 1000;\nconst waitInfinitely = -1;\n\nclass TDXApi {\n  constructor(config) {\n    this.config = config;\n    this.accessToken = config.accessToken || \"\";\n    setDefaults(this.config);\n  }\n  buildCommandRequest(command, data, contentType) {\n    contentType = contentType || \"application/json\";\n    return new Request(`${this.config.commandHost}/commandSync/${command}`, {\n      method: \"POST\",\n      mode: \"cors\",\n      headers: new Headers({\n        \"Authorization\": `Bearer ${this.accessToken}`,\n        \"Content-Type\": contentType,\n      }),\n      body: JSON.stringify(data),\n    });\n  }\n  buildQueryRequest(prefix, filter, projection, options) {\n    filter = filter ? JSON.stringify(filter) : \"\";\n    projection = projection ? JSON.stringify(projection) : \"\";\n    options = options ? JSON.stringify(options) : \"\";\n    let query;\n    if (prefix.indexOf(\"?\") < 0) {\n      // There is no query portion in the prefix - add one now.\n      query = `${prefix}?filter=${filter}&proj=${projection}&opts=${options}`;\n    } else {\n      // There is already a query portion, so append the params.\n      query = `${prefix}&filter=${filter}&proj=${projection}&opts=${options}`;\n    }\n    return new Request(`${this.config.queryHost}${query}`, {\n      method: \"GET\",\n      mode: \"cors\",\n      headers: new Headers({\n        \"Authorization\": `Bearer ${this.accessToken}`,\n        \"Content-Type\": \"application/json\",\n      }),\n    });\n  }\n  authenticate(id, secret) {\n    let credentials;\n\n    if (secret === undefined) {\n      // Assume the first argument is a pre-formed credentials string\n      credentials = id;\n    } else {\n      // uri-encode the username and concatenate with secret.\n      credentials = `${encodeURIComponent(id)}:${secret}`;\n    }\n\n    // Authorization headers must be base-64 encoded.\n    credentials = base64.encode(credentials);\n\n    // Can get a token from any of the TDX services.\n    const uri = `${this.config.tdxHost || this.config.commandHost || this.config.queryHost}/token`;\n    const request = new Request(uri, {\n      method: \"POST\",\n      mode: \"cors\",\n      headers: new Headers({\n        \"Authorization\": `Basic ${credentials}`,\n        \"Content-Type\": \"application/json\",\n      }),\n      body: JSON.stringify({grant_type: \"client_credentials\", ttl: this.config.accessTokenTTL || 3600}),\n    });\n\n    return fetch(request)\n      .then(checkResponse.bind(null, \"authenticate\"))\n      .then((result) => {\n        log(result);\n        this.accessToken = result.access_token;\n        return this.accessToken;\n      })\n      .catch((err) => {\n        errLog(`error: ${err.message}`);\n        return Promise.reject(err);\n      });\n  }\n  /*\n   *\n   *  COMMANDS\n   *\n   */\n  addAccount(options) {\n    const request = this.buildCommandRequest(\"account/create\", options);\n    return fetch(request)\n      .catch((err) => {\n        errLog(\"TDXApi.addAccount: %s\", err.message);\n        return Promise.reject(new Error(`${err.message} - [network error]`));\n      })\n      .then(checkResponse.bind(null, \"addAccount\"));\n  }\n  updateAccount(username, options) {\n    const request = this.buildCommandRequest(\"account/update\", {username, ...options});\n    return fetch(request)\n      .catch((err) => {\n        errLog(\"TDXApi.updateAccount: %s\", err.message);\n        return Promise.reject(new Error(`${err.message} - [network error]`));\n      })\n      .then(checkResponse.bind(null, \"addAccount\"));\n  }\n  approveAccount(username, approved) {\n    const request = this.buildCommandRequest(\"account/approve\", {username, approved});\n    return fetch(request)\n      .catch((err) => {\n        errLog(\"TDXApi.approveAccount: %s\", err.message);\n        return Promise.reject(new Error(`${err.message} - [network error]`));\n      })\n      .then(checkResponse.bind(null, \"approveAccount\"));\n  }\n  resetAccount(username, key) {\n    const request = this.buildCommandRequest(\"account/reset\", {username, key});\n    return fetch(request)\n      .catch((err) => {\n        errLog(\"TDXApi.resetAccount: %s\", err.message);\n        return Promise.reject(new Error(`${err.message} - [network error]`));\n      })\n      .then(checkResponse.bind(null, \"resetAccount\"));\n  }\n  verifyAccount(username, verified) {\n    const request = this.buildCommandRequest(\"account/verify\", {username, verified});\n    return fetch(request)\n      .catch((err) => {\n        errLog(\"TDXApi.verifyAccount: %s\", err.message);\n        return Promise.reject(new Error(`${err.message} - [network error]`));\n      })\n      .then(checkResponse.bind(null, \"verifyAccount\"));\n  }\n  deleteAccount(username) {\n    const request = this.buildCommandRequest(\"account/delete\", {username});\n    return fetch(request)\n      .catch((err) => {\n        errLog(\"TDXApi.deleteAccount: %s\", err.message);\n        return Promise.reject(new Error(`${err.message} - [network error]`));\n      })\n      .then(checkResponse.bind(null, \"deleteAccount\"));\n  }\n  addTrustedExchange(options) {\n    const request = this.buildCommandRequest(\"trustedConnection/create\", options);\n    return fetch(request)\n      .catch((err) => {\n        errLog(\"TDXApi.addTrustedExchange: %s\", err.message);\n        return Promise.reject(new Error(`${err.message} - [network error]`));\n      })\n      .then(checkResponse.bind(null, \"addTrustedExchange\"));\n  }\n  addResource(options, wait) {\n    const request = this.buildCommandRequest(\"resource/create\", options);\n    return fetch(request)\n      .catch((err) => {\n        errLog(\"TDXApi.addResource: %s\", err.message);\n        return Promise.reject(new Error(`${err.message} - [network error]`));\n      })\n      .then(checkResponse.bind(null, \"addResource\"))\n      .then((result) => {\n        if (wait) {\n          return this.waitForIndex(result.response.id)\n            .then(() => {\n              return result;\n            });\n        } else {\n          return result;\n        }\n      });\n  }\n  updateResource(resourceId, update) {\n    const request = this.buildCommandRequest(\"resource/update\", {id: resourceId, ...update});\n    return fetch(request)\n      .catch((err) => {\n        errLog(\"TDXApi.updateResource: %s\", err.message);\n        return Promise.reject(new Error(`${err.message} - [network error]`));\n      })\n      .then(checkResponse.bind(null, \"updateResource\"));\n  }\n  moveResource(id, fromParentId, toParentId) {\n    const request = this.buildCommandRequest(\"resource/move\", {id, fromParentId, toParentId});\n    return fetch(request)\n      .catch((err) => {\n        errLog(\"TDXApi.moveResource: %s\", err.message);\n        return Promise.reject(new Error(`${err.message} - [network error]`));\n      })\n      .then(checkResponse.bind(null, \"moveResource\"));\n  }\n  deleteResource(resourceId) {\n    const request = this.buildCommandRequest(\"resource/delete\", {id: resourceId});\n    return fetch(request)\n      .catch((err) => {\n        errLog(\"TDXApi.deleteResource: %s\", err.message);\n        return Promise.reject(new Error(`${err.message} - [network error]`));\n      })\n      .then(checkResponse.bind(null, \"deleteResource\"));\n  }\n  rebuildResourceIndex(resourceId) {\n    const request = this.buildCommandRequest(\"resource/index/rebuild\", {id: resourceId});\n    let result;\n    return fetch(request)\n      .catch((err) => {\n        errLog(\"TDXApi.rebuildResourceIndex: %s\", err.message);\n        return Promise.reject(new Error(`${err.message} - [network error]`));\n      })\n      .then(checkResponse.bind(null, \"rebuildIndex\"))\n      .then((res) => {\n        result = res;\n        return this.waitForIndex(result.response.id, \"built\");\n      })\n      .then(() => {\n        return result;\n      });\n  }\n  suspendResourceIndex(resourceId) {\n    const request = this.buildCommandRequest(\"resource/index/suspend\", {id: resourceId});\n    let result;\n    return fetch(request)\n      .catch((err) => {\n        errLog(\"TDXApi.suspendResourceIndex: %s\", err.message);\n        return Promise.reject(new Error(`${err.message} - [network error]`));\n      })\n      .then(checkResponse.bind(null, \"suspendIndex\"))\n      .then((res) => {\n        result = res;\n        return this.waitForIndex(result.response.id, \"suspended\");\n      })\n      .then(() => {\n        return result;\n      });\n  }\n  addResourceAccess(resourceId, accountId, sourceId, access) {\n    const request = this.buildCommandRequest(\"resourceAccess/add\", {\n      rid: resourceId,\n      aid: accountId,\n      src: sourceId,\n      acc: access,\n    });\n    return fetch(request)\n      .catch((err) => {\n        errLog(\"TDXApi.addResourceAccess: %s\", err.message);\n        return Promise.reject(new Error(`${err.message} - [network error]`));\n      })\n      .then(checkResponse.bind(null, \"addResourceAccess\"));\n  }\n  removeResourceAccess(resourceId, accountId, addedBy, sourceId, access) {\n    const request = this.buildCommandRequest(\"resourceAccess/delete\", {\n      rid: resourceId,\n      aid: accountId,\n      by: addedBy,\n      src: sourceId,\n      acc: access,\n    });\n    return fetch(request)\n      .catch((err) => {\n        errLog(\"TDXApi.removeResourceAccess: %s\", err.message);\n        return Promise.reject(new Error(`${err.message} - [network error]`));\n      })\n      .then(checkResponse.bind(null, \"removeResourceAccess\"));\n  }\n  setResourceShareMode(resourceId, shareMode) {\n    const request = this.buildCommandRequest(\"resource/setShareMode\", {id: resourceId, shareMode});\n    return fetch(request)\n      .catch((err) => {\n        errLog(\"TDXApi.setResourceShareMode: %s\", err.message);\n        return Promise.reject(new Error(`${err.message} - [network error]`));\n      })\n      .then(checkResponse.bind(null, \"setResourceShareMode\"));\n  }\n  setResourcePermissiveShare(resourceId, allowPermissive) {\n    const request = this.buildCommandRequest(\"resource/setPermissiveShare\", {\n      id: resourceId,\n      permissiveShare: allowPermissive ? \"r\" : \"\",\n    });\n    return fetch(request)\n      .catch((err) => {\n        errLog(\"TDXApi.setResourcePermissiveShare: %s\", err.message);\n        return Promise.reject(new Error(`${err.message} - [network error]`));\n      })\n      .then(checkResponse.bind(null, \"setResourcePermissiveShare\"));\n  }\n  truncateResource(resourceId) {\n    const request = this.buildCommandRequest(\"resource/truncate\", {id: resourceId});\n    return fetch(request)\n      .catch((err) => {\n        errLog(\"TDXApi.truncateResource: %s\", err.message);\n        return Promise.reject(new Error(`${err.message} - [network error]`));\n      })\n      .then(checkResponse.bind(null, \"truncateResource\"));\n  }\n  addData(datasetId, data) {\n    const postData = {\n      datasetId,\n      payload: [].concat(data),\n    };\n    const request = this.buildCommandRequest(\"dataset/data/createMany\", postData);\n    return fetch(request)\n      .catch((err) => {\n        errLog(\"TDXApi.createData: %s\", err.message);\n        return Promise.reject(new Error(`${err.message} - [network error]`));\n      })\n      .then(checkResponse.bind(null, \"updateData\"));\n  }\n  updateData(datasetId, data, upsert) {\n    const postData = {\n      datasetId,\n      payload: [].concat(data),\n      __upsert: !!upsert,\n    };\n    const request = this.buildCommandRequest(\"dataset/data/updateMany\", postData);\n    return fetch(request)\n      .catch((err) => {\n        errLog(\"TDXApi.updateData: %s\", err.message);\n        return Promise.reject(new Error(`${err.message} - [network error]`));\n      })\n      .then(checkResponse.bind(null, \"updateData\"));\n  }\n  patchData(datasetId, data) {\n    const postData = {\n      datasetId,\n      payload: [].concat(data),\n    };\n    const request = this.buildCommandRequest(\"dataset/data/upsertMany\", postData);\n    return fetch(request)\n      .catch((err) => {\n        errLog(\"TDXApi.patchData: %s\", err.message);\n        return Promise.reject(new Error(`${err.message} - [network error]`));\n      })\n      .then(checkResponse.bind(null, \"patchData\"));\n  }\n  deleteData(datasetId, data) {\n    const postData = {\n      datasetId,\n      ...data,\n    };\n    const request = this.buildCommandRequest(\"dataset/data/delete\", postData);\n    return fetch(request)\n      .catch((err) => {\n        errLog(\"TDXApi.deleteData: %s\", err.message);\n        return Promise.reject(new Error(`${err.message} - [network error]`));\n      })\n      .then(checkResponse.bind(null, \"deleteData\"));\n  }\n  deleteDataByQuery(datasetId, query) {\n    const postData = {\n      datasetId,\n      query,\n    };\n    const request = this.buildCommandRequest(\"dataset/data/deleteQuery\", postData);\n    return fetch(request)\n      .catch((err) => {\n        errLog(\"TDXApi.deleteDataByQuery: %s\", err.message);\n        return Promise.reject(new Error(`${err.message} - [network error]`));\n      })\n      .then(checkResponse.bind(null, \"deleteDataByQuery\"));\n  }\n  fileUpload(resourceId, file, stream) {\n    const request = new Request(`${this.config.commandHost}/commandSync/resource/${resourceId}/upload`, {\n      method: \"POST\",\n      mode: \"cors\",\n      headers: new Headers({\n        \"Authorization\": `Bearer ${this.accessToken}`,\n        \"Content-Disposition\": `attachment; filename=\"${file.name}\"`,\n        \"Content-Length\": file.size,\n      }),\n      body: file,\n    });\n\n    const response = fetch(request)\n      .catch((err) => {\n        errLog(\"TDXApi.fileUpload: %s\", err.message);\n        return Promise.reject(new Error(`${err.message} - [network error]`));\n      });\n\n    if (stream) {\n      return response;\n    } else {\n      return response\n      .then((response) => {\n        return [response, response.text()];\n      })\n      .spread((response, text) => {\n        if (response.ok) {\n          return Promise.resolve(text);\n        } else {\n          return Promise.reject(handleError(\"fileUpload\", {code: \"failure\", message: text}));\n        }\n      });\n    }\n  }\n  startDatabotInstance(databotId, payload) {\n    const postData = {\n      databotId,\n      instanceData: payload,\n    };\n    const request = this.buildCommandRequest(\"databot/startInstance\", postData);\n    return fetch(request)\n      .catch((err) => {\n        errLog(\"TDXApi.startDatabotInstance: %s\", err.message);\n        return Promise.reject(new Error(`${err.message} - [network error]`));\n      })\n      .then(checkResponse.bind(null, \"startDatabotInstance\"));\n  }\n  /*\n   *\n   *  QUERIES\n   *\n   */\n  getZone(zoneId) {\n    const request = this.buildQueryRequest(\"zones\", {username: zoneId});\n    return fetch(request)\n      .catch((err) => {\n        errLog(\"TDXApi.getZone: %s\", err.message);\n        return Promise.reject(new Error(`${err.message} - [network error]`));\n      })\n      .then(checkResponse.bind(null, \"getZone\"));\n  }\n  getResource(resourceId, noThrow) {\n    const request = this.buildQueryRequest(`resources/${resourceId}`);\n    return fetch(request)\n      .catch((err) => {\n        errLog(\"TDXApi.getResource: %s\", err.message);\n        return Promise.reject(new Error(`${err.message} - [network error]`));\n      })\n      .then((response) => {\n        if (noThrow) {\n          // If noThrow specified, return null if there is an error fetching the resource, rather than throwing.\n          if (response.ok) {\n            return response.json();\n          } else if (response.status === 404) {\n            return null;\n          } else {\n            return checkResponse(\"getResource\", response);\n          }\n        } else {\n          return checkResponse(\"getResource\", response);\n        }\n      });\n  }\n  getResources(filter, projection, options) {\n    const request = this.buildQueryRequest(\"resources\", filter, projection, options);\n    return fetch(request)\n      .catch((err) => {\n        errLog(\"TDXApi.getResource: %s\", err.message);\n        return Promise.reject(new Error(`${err.message} - [network error]`));\n      })\n      .then(checkResponse.bind(null, \"getResources\"));\n  }\n  getResourcesWithSchema(schemaId) {\n    const filter = {\"schemaDefinition.parent\": schemaId};\n    return this.getResources(filter);\n  }\n  getResourceAncestors(resourceId) {\n    const request = this.buildQueryRequest(`datasets/${resourceId}/ancestors`);\n    return fetch(request)\n      .catch((err) => {\n        errLog(\"TDXApi.getDatasetAncestors: %s\", err.message);\n        return Promise.reject(new Error(`${err.message} - [network error]`));\n      })\n      .then(checkResponse.bind(null, \"getResourceAncestors\"));\n  }\n  getDatasetData(datasetId, filter, projection, options) {\n    const request = this.buildQueryRequest(`datasets/${datasetId}/data`, filter, projection, options);\n    return fetch(request)\n      .catch((err) => {\n        errLog(\"TDXApi.getDatasetData: %s\", err.message);\n        return Promise.reject(new Error(`${err.message} - [network error]`));\n      })\n      .then(checkResponse.bind(null, \"getDatasetData\"));\n  }\n  getDatasetDataCount(datasetId, filter) {\n    const request = this.buildQueryRequest(`datasets/${datasetId}/count`, filter);\n    return fetch(request)\n      .catch((err) => {\n        errLog(\"TDXApi.getDatasetDataCount: %s\", err.message);\n        return Promise.reject(new Error(`${err.message} - [network error]`));\n      })\n      .then(checkResponse.bind(null, \"getDatasetDataCount\"));\n  }\n  getDistinct(datasetId, key, filter, projection, options) {\n    const request = this.buildQueryRequest(`datasets/${datasetId}/distinct?key=${key}`, filter, projection, options);\n    return fetch(request)\n      .catch((err) => {\n        errLog(\"TDXApi.getDistinct: %s\", err.message);\n        return Promise.reject(new Error(`${err.message} - [network error]`));\n      })\n      .then(checkResponse.bind(null, \"getDatasetData\"));\n  }\n  getTDXToken(tdx) {\n    const request = this.buildQueryRequest(`tdx-token/${tdx}`);\n    return fetch(request)\n      .catch((err) => {\n        errLog(\"TDXApi.getTDXToken: %s\", err.message);\n        return Promise.reject(new Error(`${err.message} - [network error]`));\n      })\n      .then(checkResponse.bind(null, \"getTDXToken\"));\n  }\n  waitForResource(resourceId, check, retryCount, maxRetries) {\n    retryCount = retryCount || 0;\n    return this.getResource(resourceId)\n      .then((resource) => {\n        const checkResult = check(resource, retryCount);\n        if (checkResult instanceof Error) {\n          log(\"waitForResource - check failed with error [%s]\", checkResult.message);\n          return Promise.reject(checkResult);\n        }\n\n        if (!checkResult) {\n          // A negative maxRetries value will retry indefinitely.\n          if (maxRetries >= 0 && retryCount > maxRetries) {\n            log(\"waitForResource - giving up after %d attempts\", retryCount);\n            return Promise.reject(new Error(`gave up waiting for ${resourceId} after ${retryCount} attempts`));\n          }\n\n          // Try again after a delay.\n          log(\"waitForResource - waiting for %d msec\", pollingInterval);\n          return Promise.delay(pollingInterval)\n            .then(() => {\n              return this.waitForResource(resourceId, check, retryCount + 1, maxRetries);\n            });\n        } else {\n          return resource;\n        }\n      })\n      .catch((err) => {\n        if (err.name !== \"TDXApiError\") {\n          return Promise.reject(err);\n        } else {\n          try {\n            const parseError = JSON.parse(err.message);\n            const failure = JSON.parse(parseError.failure);\n            if (failure.code === \"NotFoundError\" || failure.code === \"UnauthorizedError\") {\n              // Ignore resource not found and not authorized errors here, they are probably caused by\n              // waiting for the projections to catch up (esp. in debug environments) by falling through\n              // we will still be limited by the retry count, so won't loop forever.\n              log(\"waitForResource - ignoring error %s\", err.message);\n              return Promise.delay(pollingInterval)\n                .then(() => {\n                  return this.waitForResource(resourceId, check, retryCount + 1, maxRetries);\n                });\n            } else {\n              // All other errors are fatal.\n              return Promise.reject(err);\n            }\n          } catch (parseEx) {\n            // Failed to parse TDX error - re-throw the original error.\n            return Promise.reject(err);\n          }\n        }\n      });\n  }\n  waitForIndex(datasetId, status, maxRetries) {\n    // The argument maxRetries is optional.\n    if (typeof maxRetries === \"undefined\") {\n      maxRetries = waitInfinitely;\n    }\n    status = status || \"built\";\n\n    let initialStatus = \"\";\n\n    const builtIndexCheck = function(dataset, retryCount) {\n      log(\"builtIndexCheck: %s\", dataset ? dataset.indexStatus : \"no dataset\");\n\n      let continueWaiting;\n\n      // Handle \"error\" index status.\n      if (dataset && dataset.indexStatus === \"error\") {\n        if (!initialStatus) {\n          // Haven't got an initial status yet, so can't make a judgment as to whether or not the error status\n          // is new, or the index was already in an error state.\n          continueWaiting = true;\n        } else if (initialStatus !== \"error\") {\n          // The index status has transitioned from non-error to error => abort\n          continueWaiting = new Error(\"index entered error status\");\n        } else {\n          // The index status started as an error and is still an error => allow a limited number of retries\n          // irrespective of the requested maxRetries.\n          if (retryCount > Math.min(maxRetries, pollingRetries)) {\n            continueWaiting = new Error(`index still in error status after ${retryCount} retries`);\n          } else {\n            continueWaiting = true;\n          }\n        }\n      } else {\n        continueWaiting = !!dataset && dataset.indexStatus === status;\n      }\n\n      // Cache the first index status we see.\n      if (dataset && !initialStatus) {\n        initialStatus = dataset.indexStatus;\n      }\n\n      return continueWaiting;\n    };\n\n    return this.waitForResource(datasetId, builtIndexCheck, 0, maxRetries);\n  }\n}\n\nexport default TDXApi;\n\n\n\n// WEBPACK FOOTER //\n// ./src/api-tdx.js"],"sourceRoot":""}