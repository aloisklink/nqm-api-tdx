{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 90bbf335c3a787c29ade","webpack:///external \"bluebird\"","webpack:///./src/index.js"],"names":["checkResponse","response","json","then","ok","reject","Error","error","JSON","stringify","setDefaults","config","tdxHost","queryHost","commandHost","protocolComponents","split","length","protocol","hostComponents","hostname","slice","join","databotHost","console","log","pollingRetries","pollingInterval","waitInfinitely","TDXApi","accessToken","command","data","Request","method","mode","headers","Headers","body","filter","projection","options","query","token","secret","credentials","undefined","uri","request","grant_type","ttl","accessTokenTTL","fetch","result","access_token","catch","err","message","buildCommandRequest","resourceId","id","accountId","sourceId","access","rid","aid","src","acc","addedBy","by","shareMode","allowPermissive","permissiveShare","datasetId","upsert","postData","payload","concat","__upsert","zoneId","buildQueryRequest","username","check","retryCount","maxRetries","getDataset","dataset","checkResult","delay","waitForResource","name","parseError","parse","failure","code","parseEx","status","initialStatus","builtIndexCheck","indexStatus","continueWaiting","Math","min"],"mappings":"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","file":"nqm-api-tdx.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"bluebird\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"nqm-api-tdx\", [\"bluebird\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"nqm-api-tdx\"] = factory(require(\"bluebird\"));\n\telse\n\t\troot[\"nqm-api-tdx\"] = factory(root[\"bluebird\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_0__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 90bbf335c3a787c29ade","module.exports = __WEBPACK_EXTERNAL_MODULE_0__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"bluebird\"\n// module id = 0\n// module chunks = 0","/* eslint-disable no-console */\nimport Promise from \"bluebird\";\n\nconst checkResponse = function(response) {\n  return response.json()\n    .then((json) => {\n      if (response.ok) {\n        return json;\n      } else {\n        return Promise.reject(new Error(json.error || JSON.stringify(json)));\n      }\n    });\n};\n\nconst setDefaults = function(config) {\n  if (config.tdxHost && (!config.queryHost || !config.commandHost)) {\n    const protocolComponents = config.tdxHost.split(\"://\");\n    if (protocolComponents.length !== 2) {\n      throw new Error(`invalid tdxHost in config - no protocol: ${config.tdxHost}`);\n    }\n    const protocol = protocolComponents[0];\n    const hostComponents = protocolComponents[1].split(\".\");\n    if (hostComponents.length < 3) {\n      throw new Error(`invalid tdxHost in config - expected sub.domain.tld: ${config.tdxHost}`);\n    }\n    const hostname = hostComponents.slice(1).join(\".\");\n    config.commandHost = config.commandHost || `${protocol}://cmd.${hostname}`;\n    config.queryHost = config.queryHost || `${protocol}://q.${hostname}`;\n    config.databotHost = config.databotHost || `${protocol}://databot.${hostname}`;\n    console.log(\n      \"defaulted hosts to %s, %s, %s\",\n      config.commandHost,\n      config.queryHost,\n      config.databotHost\n    );\n  }\n};\n\nconst pollingRetries = 15;\nconst pollingInterval = 1000;\nconst waitInfinitely = -1;\n\nclass TDXApi {\n  constructor(config) {\n    this.config = config;\n    this.accessToken = config.accessToken || \"\";\n\n    setDefaults(this.config);\n  }\n  buildCommandRequest(command, data) {\n    return new Request(`${this.config.commandHost}/commandSync/${command}`, {\n      method: \"POST\",\n      mode: \"cors\",\n      headers: new Headers({\n        \"Authorization\": `Bearer ${this.accessToken}`,\n        \"Content-Type\": \"application/json\",\n      }),\n      body: JSON.stringify(data),\n    });\n  }\n  buildQueryRequest(method, filter, projection, options) {\n    filter = filter ? JSON.stringify(filter) : \"\";\n    projection = projection ? JSON.stringify(projection) : \"\";\n    options = options ? JSON.stringify(options) : \"\";\n    const query = `${method}?filter=${filter}&proj=${projection}&opts=${options}`;\n    return new Request(`${this.config.queryHost}/v1/${query}`, {\n      method: \"GET\",\n      mode: \"cors\",\n      headers: new Headers({\n        \"Authorization\": `Bearer ${this.accessToken}`,\n        \"Content-Type\": \"application/json\",\n      }),\n    });\n  }\n  authenticate(token, secret) {\n    let credentials;\n    if (secret === undefined) {\n      credentials = token;\n    } else {\n      credentials = `${token}:${secret}`;\n    }\n\n    const uri = `${this.config.tdxHost || this.config.commandHost || this.config.queryHost}/token`;\n    const request = new Request(uri, {\n      method: \"POST\",\n      mode: \"cors\",\n      headers: new Headers({\n        \"Authorization\": `Basic ${credentials}`,\n        \"Content-Type\": \"application/json\",\n      }),\n      body: JSON.stringify({grant_type: \"client_credentials\", ttl: this.config.accessTokenTTL || 3600}),\n    });\n\n    return fetch(request)\n      .then(checkResponse)\n      .then((result) => {\n        console.log(result);\n        this.accessToken = result.access_token;\n        return this.accessToken;\n      })\n      .catch((err) => {\n        console.log(`error: ${err.message}`);\n        return Promise.reject(err);\n      });\n  }\n  /*\n   *\n   *  COMMANDS\n   *\n   */\n  addAccount(options) {\n    const request = this.buildCommandRequest(\"account/create\", options);\n    return fetch(request)\n      .catch((err) => {\n        console.error(\"TDXApi.addAccount: %s\", err.message);\n        return Promise.reject(new Error(`${err.message} - [network error]`));\n      })\n      .then(checkResponse);\n  }\n  addTrustedExchange(options) {\n    const request = this.buildCommandRequest(\"trustedConnection/create\", options);\n    return fetch(request)\n      .catch((err) => {\n        console.error(\"TDXApi.addTrustedExchange: %s\", err.message);\n        return Promise.reject(new Error(`${err.message} - [network error]`));\n      })\n      .then(checkResponse);\n  }\n  addResource(options) {\n    const request = this.buildCommandRequest(\"resource/create\", options);\n    return fetch(request)\n      .catch((err) => {\n        console.error(\"TDXApi.addResource: %s\", err.message);\n        return Promise.reject(new Error(`${err.message} - [network error]`));\n      })\n      .then(checkResponse);\n  }\n  deleteResource(resourceId) {\n    const request = this.buildCommandRequest(\"resource/delete\", {id: resourceId});\n    return fetch(request)\n      .catch((err) => {\n        console.error(\"TDXApi.deleteResource: %s\", err.message);\n        return Promise.reject(new Error(`${err.message} - [network error]`));\n      })\n      .then(checkResponse);\n  }\n  addResourceAccess(resourceId, accountId, sourceId, access) {\n    const request = this.buildCommandRequest(\"resourceAccess/add\", {\n      rid: resourceId,\n      aid: accountId,\n      src: sourceId,\n      acc: access,\n    });\n    return fetch(request)\n      .catch((err) => {\n        console.error(\"TDXApi.addResourceAccess: %s\", err.message);\n        return Promise.reject(new Error(`${err.message} - [network error]`));\n      })\n      .then(checkResponse);\n  }\n  removeResourceAccess(resourceId, accountId, addedBy, sourceId, access) {\n    const request = this.buildCommandRequest(\"resourceAccess/delete\", {\n      rid: resourceId,\n      aid: accountId,\n      by: addedBy,\n      src: sourceId,\n      acc: access,\n    });\n    return fetch(request)\n      .catch((err) => {\n        console.error(\"TDXApi.removeResourceAccess: %s\", err.message);\n        return Promise.reject(new Error(`${err.message} - [network error]`));\n      })\n      .then(checkResponse);\n  }\n  setResourceShareMode(resourceId, shareMode) {\n    const request = this.buildCommandRequest(\"resource/setShareMode\", {id: resourceId, shareMode});\n    return fetch(request)\n      .catch((err) => {\n        console.error(\"TDXApi.setResourceShareMode: %s\", err.message);\n        return Promise.reject(new Error(`${err.message} - [network error]`));\n      })\n      .then(checkResponse);\n  }\n  setResourcePermissiveShare(resourceId, allowPermissive) {\n    const request = this.buildCommandRequest(\"resource/setPermissiveShare\", {\n      id: resourceId,\n      permissiveShare: allowPermissive ? \"r\" : \"\",\n    });\n    return fetch(request)\n      .catch((err) => {\n        console.error(\"TDXApi.setResourcePermissiveShare: %s\", err.message);\n        return Promise.reject(new Error(`${err.message} - [network error]`));\n      })\n      .then(checkResponse);\n  }\n  updateData(datasetId, data, upsert) {\n    const postData = {\n      datasetId,\n      payload: [].concat(data),\n      __upsert: !!upsert,\n    };\n    const request = this.buildCommandRequest(\"dataset/data/updateMany\", postData);\n    return fetch(request)\n      .catch((err) => {\n        console.error(\"TDXApi.updateData: %s\", err.message);\n        return Promise.reject(new Error(`${err.message} - [network error]`));\n      })\n      .then(checkResponse);\n  }\n  patchData(datasetId, data) {\n    const postData = {\n      datasetId,\n      payload: [].concat(data),\n    };\n    const request = this.buildCommandRequest(\"dataset/data/upsertMany\", postData);\n    return fetch(request)\n      .catch((err) => {\n        console.error(\"TDXApi.patchData: %s\", err.message);\n        return Promise.reject(new Error(`${err.message} - [network error]`));\n      })\n      .then(checkResponse);\n  }\n  deleteData(datasetId, data) {\n    const postData = {\n      datasetId,\n      ...data,\n    };\n    const request = this.buildCommandRequest(\"dataset/data/delete\", postData);\n    return fetch(request)\n      .catch((err) => {\n        console.error(\"TDXApi.deleteData: %s\", err.message);\n        return Promise.reject(new Error(`${err.message} - [network error]`));\n      })\n      .then(checkResponse);\n  }\n  /*\n   *\n   *  QUERIES\n   *\n   */\n  getZone(zoneId) {\n    const request = this.buildQueryRequest(\"zones\", {username: zoneId});\n    return fetch(request)\n      .catch((err) => {\n        console.error(\"TDXApi.getZone: %s\", err.message);\n        return Promise.reject(new Error(`${err.message} - [network error]`));\n      })\n      .then(checkResponse);\n  }\n  getResource(resourceId) {\n    const request = this.buildQueryRequest(`datasets/${resourceId}`);\n    return fetch(request)\n      .catch((err) => {\n        console.error(\"TDXApi.getResource: %s\", err.message);\n        return Promise.reject(new Error(`${err.message} - [network error]`));\n      })\n      .then(checkResponse);\n  }\n  getDatasetAncestors(datasetId) {\n    const request = this.buildQueryRequest(`datasets/${datasetId}/ancestors`);\n    return fetch(request)\n      .catch((err) => {\n        console.error(\"TDXApi.getDatasetAncestors: %s\", err.message);\n        return Promise.reject(new Error(`${err.message} - [network error]`));\n      })\n      .then(checkResponse);\n  }\n  getDatasetData(datasetId, filter, projection, options) {\n    const request = this.buildQueryRequest(`datasets/${datasetId}/data`, filter, projection, options);\n    return fetch(request)\n      .catch((err) => {\n        console.error(\"TDXApi.getDatasetData: %s\", err.message);\n        return Promise.reject(new Error(`${err.message} - [network error]`));\n      })\n      .then(checkResponse);\n  }\n  getDatasetDataCount(datasetId, filter) {\n    const request = this.buildQueryRequest(`datasets/${datasetId}/count`, filter);\n    return fetch(request)\n      .catch((err) => {\n        console.error(\"TDXApi.getDatasetDataCount: %s\", err.message);\n        return Promise.reject(new Error(`${err.message} - [network error]`));\n      })\n      .then(checkResponse);\n  }\n  waitForResource(datasetId, check, retryCount, maxRetries) {\n    retryCount = retryCount || 0;\n    return this.getDataset(datasetId)\n      .then((dataset) => {\n        const checkResult = check(dataset, retryCount);\n        if (checkResult instanceof Error) {\n          console.log(\"waitForResource - check failed with error [%s]\", checkResult.message);\n          return Promise.reject(checkResult);\n        }\n\n        if (!checkResult) {\n          // A negative maxRetries value will retry indefinitely.\n          if (maxRetries >= 0 && retryCount > maxRetries) {\n            console.log(\"waitForResource - giving up after %d attempts\", retryCount);\n            return Promise.reject(new Error(`gave up waiting for ${datasetId} after ${retryCount} attempts`));\n          }\n\n          // Try again after a delay.\n          console.log(\"waitForResource - waiting for %d msec\", pollingInterval);\n          return Promise.delay(pollingInterval)\n            .then(() => {\n              return this.waitForResource(datasetId, check, retryCount + 1, maxRetries);\n            });\n        } else {\n          return dataset;\n        }\n      })\n      .catch((err) => {\n        if (err.name !== \"TDXApiError\") {\n          return Promise.reject(err);\n        } else {\n          try {\n            const parseError = JSON.parse(err.message);\n            const failure = JSON.parse(parseError.failure);\n            if (failure.code === \"NotFoundError\" || failure.code === \"UnauthorizedError\") {\n              // Ignore resource not found and not authorized errors here, they are probably caused by\n              // waiting for the projections to catch up (esp. in debug environments) by falling through\n              // we will still be limited by the retry count, so won't loop forever.\n              console.log(\"waitForResource - ignoring error %s\", err.message);\n              return Promise.delay(pollingInterval)\n                .then(() => {\n                  return this.waitForResource(datasetId, check, retryCount + 1, maxRetries);\n                });\n            } else {\n              // All other errors are fatal.\n              return Promise.reject(err);\n            }\n          } catch (parseEx) {\n            // Failed to parse TDX error - re-throw the original error.\n            return Promise.reject(err);\n          }\n        }\n      });\n  }\n  waitForIndex(datasetId, status, maxRetries) {\n    // The argument maxRetries is optional.\n    if (typeof maxRetries === \"undefined\") {\n      maxRetries = waitInfinitely;\n    }\n    status = status || \"built\";\n\n    let initialStatus = \"\";\n\n    const builtIndexCheck = function(dataset, retryCount) {\n      console.log(\"builtIndexCheck: %s\", dataset ? dataset.indexStatus : \"no dataset\");\n\n      let continueWaiting;\n\n      // Handle \"error\" index status.\n      if (dataset && dataset.indexStatus === \"error\") {\n        if (!initialStatus) {\n          // Haven't got an initial status yet, so can't make a judgment as to whether or not the error status\n          // is new, or the index was already in an error state.\n          continueWaiting = true;\n        } else if (initialStatus !== \"error\") {\n          // The index status has transitioned from non-error to error => abort\n          continueWaiting = new Error(\"index entered error status\");\n        } else {\n          // The index status started as an error and is still an error => allow a limited number of retries\n          // irrespective of the requested maxRetries.\n          if (retryCount > Math.min(maxRetries, pollingRetries)) {\n            continueWaiting = new Error(`index still in error status after ${retryCount} retries`);\n          } else {\n            continueWaiting = true;\n          }\n        }\n      } else {\n        continueWaiting = !!dataset && dataset.indexStatus === status;\n      }\n\n      // Cache the first index status we see.\n      if (dataset && !initialStatus) {\n        initialStatus = dataset.indexStatus;\n      }\n\n      return continueWaiting;\n    };\n\n    return this.waitForResource(datasetId, builtIndexCheck, 0, maxRetries);\n  }\n}\n\nexport default TDXApi;\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js"],"sourceRoot":""}